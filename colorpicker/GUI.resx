<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAD3BAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEjElEQVRoQ9WaQWgc
        VRjH/28mOnvIYQ8t5uChhR52Yw71IPSg2IClFREvCgYUe6jQIkID4m4sEvaUbiltCkK9CD1UqiB4URSM
        pNIWAo2k4JLkUOg1gRxyqHS37s7z+957k5ndmcnOpjPN7A929/vevsn+/+/Ne/PNbgTySrVxCtJ+B0Ie
        o+wApGhAiAd4imu4UtrSnYD8GZhdKaLlXCVpp01LD3ILrjiHS+WfOMvOwOziCJoHj8EaeQ+uLNFIjtLH
        bcB1/6b8Ji5PbJiePl80xmBbizTSJdMSj4sP2EQ2BiprPHoXaHiO6IYQ2zSSNVwcnzd5WLxEG5aYR1v+
        CAtbEB1qt2fpHT6luMMWnlrldA3MNkbRsq9T9JFu6IPAPObK0xHiH9Pzu6iXb6vcg2e19dIfdOBxldPx
        6RqorFZJxJzJCBolYd0AOvdo9NYhOy9DWhX64LdMB+oivqXz4Xi3+M7bqE/cVXkvXzWOwrVXdCKXszUg
        5Qzq4xdNptGjeIuG733T4tNPPKOOH/tPxVI2LRWkRcH9hp79D2cz1dXzJtPUJttwNqfo09UuskMS8Yoi
        bQYGIVI2UJt4DIdEBE1AXI03gR90Ay/qJOKJJ84pE7HplE8hD72Yf6Podd3AyOmuXcdjZr2EF59soPYq
        megD95XuHRqUA7pBTmdjgBnERBKUeLlI0ZhuwBKcjTeyM8BEm/icTPBaSU6veF4vlngNc6X1dNdAL1Fr
        QtKa+HItvAPFESWe1wuJ5zRbA8y/GCUB5pwlBEbocSuRiTjxgcWerYG42iapCdf9mZ5jxTPZGYgqD7gA
        k1JNfV8TfDyEX0sJ/BK1zWZjILK2odHjErjjTiYywdWqoKrV50PMrFGZ3U36BuLEe6PHwpKacDY/pT/g
        X7ElzqtyJUC622g/8UHCfdv0mPJuVHYI107bcJqHvQtfejMwiHgm6Ux4ZYfEgmkpolnYKU3SMTCoeA91
        V0a3hx67mZDya5NRP/mmiVIwsFfxDO/zLDhInAlBt6MRPJuBZxUfukjJZRVHmbA7RRN1sXcDqYunYx1a
        E17Z0WuiLfy7OIiHJtijgSzE87G9tVPQhLA+UW2McH81Eb09KFmJDxJZxRr4mELhIGqHm5wONgPPQzwT
        eWdnELQbGfFM8hl4XuKD9M4EXwvq5RMqNiSbgf0Qz3gzIcRlym6i0/lYv+HTfwb2S3xCdjeQc/FMvIEh
        EM9EGxgS8UzYwBCJZ7oNDJl4xjavtOeuFOG+cGeYxDP+daBVqAybeEafQtXGEUjrHzJQIAFtEjA5DOIZ
        PQPC/kyJVzFuDIt4RhuQ0D/ZMBLfmyienIhnLLXzAEdVJmWTStUlFceRI/GMBcvyRx/idrBUDZEz8QwZ
        wEkTE/IvE4TJoXjGIiHmd1fCdn83kQ9fHyqrZ/IonhGorj6il0M6dU/AkUto0Q2EsE+SUD699PrwyJF4
        RqCyfp1u086avB93qe85zI03TL7v0AzQRQz2fYojv3dRO5PAEr1+h/orwW+Lc0HgSqz+RYDXQ4Fal+mt
        BRL9p9pWd9uZ9hXgf+pMBt9sQAZIAAAAAElFTkSuQmCC
</value>
  </data>
</root>